- remove auto_mocha and put it in its own rubyforge project
- provide some means to un-stubba an object - ideally should restore any methods with same names as stubba methods c.f. dealing with expectations for methods called :expects, :stubs, etc.
- on_consecutive_calls functionality
- think about behaviour when more than one expectation/stubbed method match
- make verify method private (makes this unnecessary - fail if attempt to verify stub)
- allow hash parameter for stubs and expects methods particularly for stubba
- test for setting expectations on class methods (and instance methods?) from within TestCase#setup
- use Object#inspect(:mocha) instead of Object#mocha_inspect?
- allow stubbing of private/protected methods?
- should all instances share expectations for any_instance or should each instance have their own - in which case how do we provide access to the instances
- detect existing or added definition of mocha methods e.g. expects and alias to __expects?
- allow switch off of auto-verify?
- maybe use blank_slate as mocha parent class to allow mocking of standard object methods?
- more jmock style stuff - e.g. return values on consecutive calls, labels/required order, more sophisticated param matching?
- stubs should only return a fixed value - no blocks allowed for return values and no parameter expectations allowed?
- maybe allow unstubbing of a specific method from within a test...?