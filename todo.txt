- allow stubbing of private/protected methods?
- should all instances share expectations for any_instance or should each instance have their own - in which case how do we provide access to the instances
- check if mocking 'new' method is still possible
- single require for all relevant files
- namespacing
- detect existing or added definition of mocha methods e.g. expects and alias to __expects?
- separate stubs/expects to have different behaviour
- auto-verify? default to on, allow switch off?
- fail if verify called with no expectations? set expectation - expects(:blah).never to ensure method not called
- fail if attempt to verify stub??
- maybe use blank_slate as mocha parent class to allow mocking of standard object methods?
- mock() method on test case to hide implementation detail of Mocha.new
- improve implementation of test case setup/teardown
- more jmock style stuff - e.g. return values on consecutive calls, labels/required order, more sophisticated param matching?
- test for setting expectations on class methods (and instance methods?) in TestCase#setup
- test for verifying expectations in TestCase#teardown
- experienced problem when including a module with setup method into a TestCase derived class (something like nil.unstub_all in teardown)
- stubs should only return a fixed value - no blocks allowed for return values and no parameter expectations allowed
- maybe allow unstubbing of a specific method from within a test...?